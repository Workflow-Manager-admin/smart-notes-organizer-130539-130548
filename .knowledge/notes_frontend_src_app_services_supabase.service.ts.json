{"is_source_file": true, "format": "TypeScript (Angular Service)", "description": "This file defines an Angular service 'SupabaseService' that provides methods for authentication and managing notes, tags, and folders via the Supabase backend. It handles initialization of the Supabase client using environment variables or window properties, and exposes public methods for sign-in, sign-up, sign-out, session retrieval, user info, and CRUD operations on notes, tags, and folders.", "external_files": ["node_modules/@angular/core", "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/dist/supabase-js.min.js"], "external_methods": ["createClient", "SupabaseClient", "Session", "User"], "published": ["SupabaseService"], "classes": [{"name": "SupabaseService", "description": "Angular service class that manages authentication and notes-related operations with Supabase."}], "methods": [{"name": "async signIn(email: string, password: string) { signIn", "description": "Authenticates a user with email and password.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async signUp(email: string, password: string) { signUp", "description": "Registers a new user with email and password.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async signOut() { signOut", "description": "Signs out the current authenticated user.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getSession(): Promise<Session | null> { getSession", "description": "Retrieves the current user session.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getUser(): Promise<User | null> { getUser", "description": "Retrieves the currently authenticated user.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getNotes(options?: { tag?: string, folder?: string, search?: string }) { getNotes", "description": "Fetches notes with optional filters: tag, folder, search.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getNoteById(id: string) { getNoteById", "description": "Fetches a specific note by its ID.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async createNote(note: { title: string, content: string, tags: string[], folder: string }) { createNote", "description": "Creates a new note with provided details.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async updateNote(id: string, note: { title: string, content: string, tags: string[], folder: s/ updateNote", "description": "Updates an existing note by ID.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async deleteNote(id: string) { deleteNote", "description": "Deletes a note by ID.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getTags() { getTags", "description": "Retrieves unique tags from all notes.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getFolders() { getFolders", "description": "Retrieves unique folders from all notes.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "constructor() { constructor", "scope": "SupabaseService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.supabase.auth.signInWithPassword", "this.supabase.auth.signUp", "this.supabase.auth.signOut", "this.supabase.auth.getSession", "this.supabase.auth.getUser", "this.supabase.from('notes').select", "this.supabase.from('notes').contains", "this.supabase.from('notes').eq", "this.supabase.from('notes').ilike", "this.supabase.from('notes').single", "this.supabase.from('notes').insert", "this.supabase.from('notes').update", "this.supabase.from('notes').delete"], "search-terms": ["Angular Supabase auth", "Notes CRUD", "supabase client initialization", "environment variables", "tags and folders retrieval", "SupabaseService"], "state": 2, "file_id": 22, "knowledge_revision": 103, "git_revision": "", "revision_history": [{"45": ""}, {"103": ""}], "ctags": [{"_type": "tag", "name": "SupabaseService", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^export class SupabaseService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  constructor() {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async createNote(note: { title: string, content: string, tags: string[], folder: string }) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data } = await this.supabase.auth.getSession();$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getSession", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data } = await this.supabase.auth.getUser();$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getUser", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await q;$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getNotes", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await this.supabase$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getFolders", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await this.supabase$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getTags", "scopeKind": "method"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async deleteNote(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await q;$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getNotes", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await this.supabase$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getFolders", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await this.supabase$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getTags", "scopeKind": "method"}, {"_type": "tag", "name": "getFolders", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getFolders() {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getNoteById", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getNoteById(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getNotes(options?: { tag?: string, folder?: string, search?: string }) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getSession", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getSession(): Promise<Session | null> {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getTags", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getTags() {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getUser", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getUser(): Promise<User | null> {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "session", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  private session: Session | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "signIn", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async signIn(email: string, password: string) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "signOut", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async signOut() {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "signUp", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async signUp(email: string, password: string) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "supabase", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  private supabase: SupabaseClient;$/", "language": "TypeScript", "kind": "property", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async updateNote(id: string, note: { title: string, content: string, tags: string[], folder: s/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}], "hash": "e032b26cf00d6194d1b06cdbc78b53d1", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/supabase.service.ts", "fields": [{"name": "private session: Session | null = null;", "scope": "SupabaseService", "scopeKind": "class", "description": "unavailable"}, {"name": "private supabase: SupabaseClient;", "scope": "SupabaseService", "scopeKind": "class", "description": "unavailable"}]}