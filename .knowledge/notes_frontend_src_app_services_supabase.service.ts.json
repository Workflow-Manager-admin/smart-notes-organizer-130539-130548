{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service class SupabaseService that provides methods for authentication, fetching, creating, updating, and deleting notes, as well as retrieving tags and folders. It interacts with a Supabase backend using the supabase-js client library, with environment variables for configuration.", "external_files": ["node_modules/@supabase/supabase-js/dist/supabase-js.js", "@angular/core"], "external_methods": ["createClient", "SupabaseClient", "Session", "User"], "published": ["SupabaseService"], "classes": [{"name": "SupabaseService", "description": "An Angular service that manages user authentication and notes data via Supabase."}], "methods": [{"name": "constructor() { constructor", "description": "Initializes the Supabase client after determining configuration from environment variables.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async signIn(email: string, password: string) { signIn", "description": "Signs in a user with email and password.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async signUp(email: string, password: string) { signUp", "description": "Creates a new user account with email and password.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async signOut() { signOut", "description": "Signs out the current user.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getSession(): Promise<Session | null> { getSession", "description": "Retrieves the current user session.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getUser(): Promise<User | null> { getUser", "description": "Retrieves the currently authenticated user's information.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getNotes(options?: { tag?: string, folder?: string, search?: string }) { getNotes", "description": "Fetches notes with optional tag, folder, and search filters.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getNoteById(id: string) { getNoteById", "description": "Fetches a single note by its ID.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async createNote(note: { title: string, content: string, tags: string[], folder: string }) { createNote", "description": "Creates a new note with specified properties.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async updateNote(id: string, note: { title: string, content: string, tags: string[], folder: s/ updateNote", "description": "Updates an existing note identified by ID.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async deleteNote(id: string) { deleteNote", "description": "Deletes a note by its ID.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getTags() { getTags", "description": "Retrieves all unique tags from notes.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "async getFolders() { getFolders", "description": "Retrieves all unique folders from notes.", "scope": "SupabaseService", "scopeKind": "class"}], "calls": ["this.supabase.auth.signInWithPassword", "this.supabase.auth.signUp", "this.supabase.auth.signOut", "this.supabase.auth.getSession", "this.supabase.auth.getUser", "this.supabase.from('notes').select", "this.supabase.from('notes').contains", "this.supabase.from('notes').eq", "this.supabase.from('notes').ilike", "this.supabase.from('notes').single", "this.supabase.from('notes').insert", "this.supabase.from('notes').update", "this.supabase.from('notes').delete"], "search-terms": ["Angular Supabase service", "Notes management", "Environment variable configuration", "Supabase authentication", "Notes CRUD operations", "Tags and folders retrieval"], "state": 2, "file_id": 22, "knowledge_revision": 132, "git_revision": "192d50a7a8427c18425436b53756c880502c66ab", "revision_history": [{"45": ""}, {"103": ""}, {"114": "192d50a7a8427c18425436b53756c880502c66ab"}, {"126": "192d50a7a8427c18425436b53756c880502c66ab"}, {"132": "192d50a7a8427c18425436b53756c880502c66ab"}], "ctags": [{"_type": "tag", "name": "SupabaseService", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^export class SupabaseService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  constructor() {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async createNote(note: { title: string, content: string, tags: string[], folder: string }) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data } = await this.supabase.auth.getSession();$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getSession", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data } = await this.supabase.auth.getUser();$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getUser", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await q;$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getNotes", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await this.supabase$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getFolders", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await this.supabase$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getTags", "scopeKind": "method"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async deleteNote(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await q;$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getNotes", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await this.supabase$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getFolders", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^    const { data, error } = await this.supabase$/", "language": "TypeScript", "kind": "constant", "scope": "SupabaseService.getTags", "scopeKind": "method"}, {"_type": "tag", "name": "getFolders", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getFolders() {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getNoteById", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getNoteById(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getNotes(options?: { tag?: string, folder?: string, search?: string }) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getSession", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getSession(): Promise<Session | null> {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getTags", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getTags() {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "getUser", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async getUser(): Promise<User | null> {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "session", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  private session: Session | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "signIn", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async signIn(email: string, password: string) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "signOut", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async signOut() {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "signUp", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async signUp(email: string, password: string) {$/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "supabase", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  private supabase: SupabaseClient;$/", "language": "TypeScript", "kind": "property", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/services/supabase.service.ts", "pattern": "/^  async updateNote(id: string, note: { title: string, content: string, tags: string[], folder: s/", "language": "TypeScript", "kind": "method", "scope": "SupabaseService", "scopeKind": "class"}], "hash": "5e2d76d7c3711da5f52ab0650c8afd41", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/supabase.service.ts", "fields": [{"name": "private session: Session | null = null;", "scope": "SupabaseService", "scopeKind": "class", "description": "unavailable"}, {"name": "private supabase: SupabaseClient;", "scope": "SupabaseService", "scopeKind": "class", "description": "unavailable"}]}