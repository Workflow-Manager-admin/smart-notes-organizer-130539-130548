{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "This file defines an Angular component named NoteEditorComponent used for editing notes, including functionalities like adding/removing tags, saving, and canceling edits.", "external_files": ["./note-editor.component.html", "./note-editor.component.css", "../../models/note.model"], "external_methods": ["EventEmitter.emit", "MatChipInputEvent.chipInput.clear"], "published": ["save", "cancel"], "classes": [{"name": "NoteEditorComponent", "description": "Angular component for editing notes with input fields and tag management"}], "methods": [{"name": "ngOnChanges", "description": "Lifecycle hook to update the local editNote state when input note changes"}, {"name": "onSave", "description": "Emits the save event with the current note data"}, {"name": "onCancel", "description": "Emits the cancel event"}, {"name": "removeTag", "description": "Removes a tag from the current note's tags"}, {"name": "addTag", "description": "Adds a new tag to the current note's tags based on user input"}], "calls": ["this.save.emit", "this.cancel.emit", "this.editNote.tags.filter", "event.chipInput.clear"], "search-terms": ["Angular note editor", "note editing component", "Angular Material chips", "tag management in Angular", "Note model Angular"], "state": 2, "file_id": 37, "knowledge_revision": 171, "git_revision": "2144ec35ab93c449187adef3c4f5c3e433078351", "revision_history": [{"80": ""}, {"109": "192d50a7a8427c18425436b53756c880502c66ab"}, {"121": "192d50a7a8427c18425436b53756c880502c66ab"}, {"122": "192d50a7a8427c18425436b53756c880502c66ab"}, {"131": "192d50a7a8427c18425436b53756c880502c66ab"}, {"145": "527dd858dbfb1eb8f12c21d54dab4687799c8946"}, {"149": "527dd858dbfb1eb8f12c21d54dab4687799c8946"}, {"151": "527dd858dbfb1eb8f12c21d54dab4687799c8946"}, {"157": "2144ec35ab93c449187adef3c4f5c3e433078351"}, {"164": "2144ec35ab93c449187adef3c4f5c3e433078351"}, {"167": "2144ec35ab93c449187adef3c4f5c3e433078351"}, {"171": "2144ec35ab93c449187adef3c4f5c3e433078351"}], "ctags": [{"_type": "tag", "name": "NoteEditorComponent", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^export class NoteEditorComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "allTags", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() allTags: string[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() note: Note | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Output() save = new EventEmitter<Partial<Note>>();$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^    const value = (event.value || '').trim();$/", "language": "TypeScript", "kind": "constant"}], "hash": "357fac646cf4b49b390956632e754647", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/components/note-editor/note-editor.component.ts", "fields": [{"name": "@Input() allTags: string[] = [];", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Input() note: Note | null = null;", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Output() save = new EventEmitter<Partial<Note>>();", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}]}