{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular component called NoteEditorComponent, which provides UI and logic for editing notes. It manages input properties for notes and tags, and output events for saving or canceling edits. The component interacts with Angular Material UI modules for styling and input handling.", "external_files": ["./note-editor.component.html", "./note-editor.component.css", "../../models/note.model", "@angular/core", "@angular/forms", "@angular/material/card", "@angular/material/form-field", "@angular/material/input", "@angular/material/button", "@angular/material/chips", "@angular/material/icon"], "external_methods": ["EventEmitter.emit", "Array.filter", "Array.includes", "Array.push", "Array spreads", "Note.tags", "Note.title", "Note.content", "Note.folder"], "published": ["save", "cancel", "note", "allTags"], "classes": [{"name": "NoteEditorComponent", "description": "An Angular component for editing notes, supporting adding/removing tags, and emitting save/cancel events."}], "methods": [{"name": "ngOnChanges", "description": "Updates the local editNote state whenever input 'note' changes."}, {"name": "onSave", "description": "Emits the current note edits when the save action is triggered."}, {"name": "onCancel", "description": "Emits a cancel event to discard changes."}, {"name": "removeTag", "description": "Removes a tag from the note being edited."}, {"name": "addTag", "description": "Adds a new tag to the note when a chip input event occurs."}], "calls": ["this.save.emit", "this.cancel.emit", "this.editNote.tags.filter", "event.chipInput.clear", "this.editNote.tags.includes"], "search-terms": ["Angular NoteEditorComponent", "Angular Material tag input", "TypeScript Angular component", "Note editing UI", "Angular @Input @Output"], "state": 2, "file_id": 37, "knowledge_revision": 151, "git_revision": "527dd858dbfb1eb8f12c21d54dab4687799c8946", "revision_history": [{"80": ""}, {"109": "192d50a7a8427c18425436b53756c880502c66ab"}, {"121": "192d50a7a8427c18425436b53756c880502c66ab"}, {"122": "192d50a7a8427c18425436b53756c880502c66ab"}, {"131": "192d50a7a8427c18425436b53756c880502c66ab"}, {"145": "527dd858dbfb1eb8f12c21d54dab4687799c8946"}, {"149": "527dd858dbfb1eb8f12c21d54dab4687799c8946"}, {"151": "527dd858dbfb1eb8f12c21d54dab4687799c8946"}], "ctags": [{"_type": "tag", "name": "NoteEditorComponent", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^export class NoteEditorComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "allTags", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() allTags: string[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() note: Note | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Output() save = new EventEmitter<Partial<Note>>();$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-130539-130548/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^    const value = (event.value || '').trim();$/", "language": "TypeScript", "kind": "constant"}], "hash": "7284fdb5fde19165f76aedc8e187e761", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/components/note-editor/note-editor.component.ts", "fields": [{"name": "@Input() allTags: string[] = [];", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Input() note: Note | null = null;", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Output() save = new EventEmitter<Partial<Note>>();", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}]}